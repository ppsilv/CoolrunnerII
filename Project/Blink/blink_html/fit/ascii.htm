<html><body>
<pre>
 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: blink                               Date:  9-25-2024,  7:56PM
Device Used: XC9572XL-10-VQ44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
21 /72  ( 29%) 254 /360  ( 71%) 81 /216 ( 37%)   21 /72  ( 29%) 4  /34  ( 12%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1           1/18       21/54       11/90       2/ 9
FB2           6/18       20/54       86/90       1/ 9
FB3           7/18       20/54       88/90       1/ 9
FB4           7/18       20/54       69/90       0/ 7
             -----       -----       -----      -----    
             21/72       81/216     254/360      4/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'Clock' mapped onto global clock net GCK3.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    1           1    |  I/O              :     3      28
Output        :    2           2    |  GCK/IO           :     1       3
Bidirectional :    0           0    |  GTS/IO           :     0       2
GCK           :    1           1    |  GSR/IO           :     0       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total      4           4

** Power Data **

There are 21 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'blink.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'Clock' based upon the LOC
   constraint 'P1'. It is recommended that you declare this BUFG explicitedly in
   your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
*************************  Summary of Mapped Logic  ************************

** 2 Outputs **

Signal              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                Pts   Inps          No.  Type    Use     Mode Rate State
led2                11    21    FB1_2   39   I/O     O       STD  FAST SET
led1                10    20    FB2_17  38   I/O     O       STD  FAST RESET

** 19 Buried Nodes **

Signal              Total Total Loc     Pwr  Reg Init
Name                Pts   Inps          Mode State
count<18>           11    20    FB2_1   STD  RESET
count<12>           15    20    FB2_7   STD  RESET
count<11>           15    20    FB2_10  STD  RESET
count<4>            16    20    FB2_13  STD  RESET
count<9>            19    20    FB2_15  STD  RESET
count<13>           15    20    FB3_2   STD  RESET
count<0>            10    20    FB3_5   STD  RESET
count<8>            12    20    FB3_8   STD  RESET
count<3>            12    20    FB3_9   STD  RESET
count<17>           12    20    FB3_13  STD  RESET
count<16>           12    20    FB3_14  STD  RESET
count<14>           15    20    FB3_17  STD  RESET
count<6>            11    18    FB4_3   STD  RESET
count<10>           10    20    FB4_6   STD  RESET
count<1>            10    18    FB4_8   STD  RESET
count<5>            10    17    FB4_10  STD  RESET
count<15>           5     20    FB4_11  STD  RESET
count<2>            11    19    FB4_15  STD  RESET
count<7>            12    19    FB4_18  STD  RESET

** 2 Inputs **

Signal              Loc     Pin  Pin     Pin     
Name                        No.  Type    Use     
Clock               FB1_14  1    GCK/I/O GCK
Reset               FB3_16  18   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/3   2     FB1_1         (b)     (b)
led2                 11       6<-   0   0     FB1_2   39    I/O     O
(unused)              0       0   /\3   2     FB1_3         (b)     (b)
(unused)              0       0     0   5     FB1_4         (b)     
(unused)              0       0     0   5     FB1_5   40    I/O     
(unused)              0       0     0   5     FB1_6   41    I/O     
(unused)              0       0     0   5     FB1_7         (b)     
(unused)              0       0     0   5     FB1_8   42    I/O     
(unused)              0       0     0   5     FB1_9   43    GCK/I/O 
(unused)              0       0     0   5     FB1_10        (b)     
(unused)              0       0     0   5     FB1_11  44    GCK/I/O 
(unused)              0       0     0   5     FB1_12        (b)     
(unused)              0       0     0   5     FB1_13        (b)     
(unused)              0       0     0   5     FB1_14  1     GCK/I/O GCK
(unused)              0       0     0   5     FB1_15  2     I/O     
(unused)              0       0     0   5     FB1_16        (b)     
(unused)              0       0     0   5     FB1_17  3     I/O     
(unused)              0       0     0   5     FB1_18        (b)     

Signals Used by Logic in Function Block
  1: Reset              8: count<15>         15: count<4> 
  2: count<0>           9: count<16>         16: count<5> 
  3: count<10>         10: count<17>         17: count<6> 
  4: count<11>         11: count<18>         18: count<7> 
  5: count<12>         12: count<1>          19: count<8> 
  6: count<13>         13: count<2>          20: count<9> 
  7: count<14>         14: count<3>          21: led1 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
led2                 XXXXXXXXXXXXXXXXXXXXX................... 21
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               20/34
Number of signals used by logic mapping into function block:  20
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
count<18>            11       9<- /\3   0     FB2_1         (b)     (b)
(unused)              0       0   /\5   0     FB2_2   29    I/O     (b)
(unused)              0       0   /\4   1     FB2_3         (b)     (b)
(unused)              0       0   \/2   3     FB2_4         (b)     (b)
(unused)              0       0   \/5   0     FB2_5   30    I/O     (b)
(unused)              0       0   \/5   0     FB2_6   31    I/O     (b)
count<12>            15      12<- \/2   0     FB2_7         (b)     (b)
(unused)              0       0   \/5   0     FB2_8   32    I/O     (b)
(unused)              0       0   \/5   0     FB2_9   33    GSR/I/O (b)
count<11>            15      12<- \/2   0     FB2_10        (b)     (b)
(unused)              0       0   \/5   0     FB2_11  34    GTS/I/O (b)
(unused)              0       0   \/5   0     FB2_12        (b)     (b)
count<4>             16      12<- \/1   0     FB2_13        (b)     (b)
(unused)              0       0   \/5   0     FB2_14  36    GTS/I/O (b)
count<9>             19      14<-   0   0     FB2_15  37    I/O     (b)
(unused)              0       0   /\5   0     FB2_16        (b)     (b)
led1                 10       8<- /\3   0     FB2_17  38    I/O     O
(unused)              0       0   /\5   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: Reset              8: count<15>         15: count<4> 
  2: count<0>           9: count<16>         16: count<5> 
  3: count<10>         10: count<17>         17: count<6> 
  4: count<11>         11: count<18>         18: count<7> 
  5: count<12>         12: count<1>          19: count<8> 
  6: count<13>         13: count<2>          20: count<9> 
  7: count<14>         14: count<3>         

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
count<18>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<12>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<11>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<4>             XXXXXXXXXXXXXXXXXXXX.................... 20
count<9>             XXXXXXXXXXXXXXXXXXXX.................... 20
led1                 XXXXXXXXXXXXXXXXXXXX.................... 20
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               20/34
Number of signals used by logic mapping into function block:  20
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB3_1         (b)     (b)
count<13>            15      10<-   0   0     FB3_2   5     I/O     (b)
(unused)              0       0   /\5   0     FB3_3         (b)     (b)
(unused)              0       0   \/5   0     FB3_4         (b)     (b)
count<0>             10       5<-   0   0     FB3_5   6     I/O     (b)
(unused)              0       0   \/4   1     FB3_6         (b)     (b)
(unused)              0       0   \/5   0     FB3_7         (b)     (b)
count<8>             12       9<- \/2   0     FB3_8   7     I/O     (b)
count<3>             12       7<-   0   0     FB3_9   8     I/O     (b)
(unused)              0       0   /\5   0     FB3_10        (b)     (b)
(unused)              0       0   \/4   1     FB3_11  12    I/O     (b)
(unused)              0       0   \/5   0     FB3_12        (b)     (b)
count<17>            12       9<- \/2   0     FB3_13        (b)     (b)
count<16>            12       7<-   0   0     FB3_14  13    I/O     (b)
(unused)              0       0   /\5   0     FB3_15  14    I/O     (b)
(unused)              0       0   \/5   0     FB3_16  18    I/O     I
count<14>            15      10<-   0   0     FB3_17  16    I/O     (b)
(unused)              0       0   /\5   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: Reset              8: count<15>         15: count<4> 
  2: count<0>           9: count<16>         16: count<5> 
  3: count<10>         10: count<17>         17: count<6> 
  4: count<11>         11: count<18>         18: count<7> 
  5: count<12>         12: count<1>          19: count<8> 
  6: count<13>         13: count<2>          20: count<9> 
  7: count<14>         14: count<3>         

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
count<13>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<0>             XXXXXXXXXXXXXXXXXXXX.................... 20
count<8>             XXXXXXXXXXXXXXXXXXXX.................... 20
count<3>             XXXXXXXXXXXXXXXXXXXX.................... 20
count<17>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<16>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<14>            XXXXXXXXXXXXXXXXXXXX.................... 20
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               20/34
Number of signals used by logic mapping into function block:  20
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\2   3     FB4_1         (b)     (b)
(unused)              0       0   \/1   4     FB4_2   19    I/O     (b)
count<6>             11       6<-   0   0     FB4_3         (b)     (b)
(unused)              0       0   /\5   0     FB4_4         (b)     (b)
(unused)              0       0   \/5   0     FB4_5   20    I/O     (b)
count<10>            10       5<-   0   0     FB4_6         (b)     (b)
(unused)              0       0   \/5   0     FB4_7         (b)     (b)
count<1>             10       5<-   0   0     FB4_8   21    I/O     (b)
(unused)              0       0   \/5   0     FB4_9         (b)     (b)
count<5>             10       5<-   0   0     FB4_10        (b)     (b)
count<15>             5       0     0   0     FB4_11  22    I/O     (b)
(unused)              0       0     0   5     FB4_12        (b)     
(unused)              0       0     0   5     FB4_13        (b)     
(unused)              0       0   \/1   4     FB4_14  23    I/O     (b)
count<2>             11       6<-   0   0     FB4_15  27    I/O     (b)
(unused)              0       0   /\5   0     FB4_16        (b)     (b)
(unused)              0       0   \/5   0     FB4_17  28    I/O     (b)
count<7>             12       7<-   0   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: Reset              8: count<15>         15: count<4> 
  2: count<0>           9: count<16>         16: count<5> 
  3: count<10>         10: count<17>         17: count<6> 
  4: count<11>         11: count<18>         18: count<7> 
  5: count<12>         12: count<1>          19: count<8> 
  6: count<13>         13: count<2>          20: count<9> 
  7: count<14>         14: count<3>         

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
count<6>             XXXXXXXXXXXXXXXXX..X.................... 18
count<10>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<1>             XXXXXXXXXXXX..XXXXXX.................... 18
count<5>             XXXXXXXXXXXXXXXX...X.................... 17
count<15>            XXXXXXXXXXXXXXXXXXXX.................... 20
count<2>             XXXXXXXXXXXXX.XXXXXX.................... 19
count<7>             XXXXXXXXXXXXXXXXXX.X.................... 19
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********





































































FTCPE_count0: FTCPE port map (count(0),count_T(0),Clock,NOT Reset,'0');
count_T(0) <= ((NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(6) AND count(9) AND 
	count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(8) AND count(9) AND 
	count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(1) AND count(4) AND 
	count(9) AND count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(2) AND count(4) AND 
	count(9) AND count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(3) AND count(4) AND 
	count(9) AND count(18))
	OR (NOT count(0) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (NOT count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(16) AND count(17) AND count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(5) AND count(9) AND 
	count(18))
	OR (NOT count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(7) AND count(9) AND 
	count(18)));

FDCPE_count1: FDCPE port map (count(1),count_D(1),Clock,NOT Reset,'0');
count_D(1) <= ((count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(4) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(1))
	OR (NOT count(0) AND NOT count(1))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18)));

FDCPE_count2: FDCPE port map (count(2),count_D(2),Clock,NOT Reset,'0');
count_D(2) <= ((count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(4) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (NOT count(0) AND NOT count(2))
	OR (NOT count(1) AND NOT count(2))
	OR (count(0) AND count(1) AND count(2))
	OR (count(15) AND count(16) AND count(17) AND count(18)));

FDCPE_count3: FDCPE port map (count(3),count_D(3),Clock,NOT Reset,'0');
count_D(3) <= ((count(15) AND count(16) AND count(17) AND count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(4) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (NOT count(0) AND NOT count(3))
	OR (NOT count(1) AND NOT count(3))
	OR (NOT count(2) AND NOT count(3))
	OR (count(0) AND count(1) AND count(2) AND count(3)));

FDCPE_count4: FDCPE port map (count(4),count_D(4),Clock,NOT Reset,'0');
count_D(4) <= ((EXP15_.EXP)
	OR (NOT count(3) AND NOT count(4))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (NOT count(0) AND NOT count(4))
	OR (NOT count(1) AND NOT count(4))
	OR (NOT count(2) AND NOT count(4)));

FDCPE_count5: FDCPE port map (count(5),count_D(5),Clock,NOT Reset,'0');
count_D(5) <= ((NOT count(4) AND NOT count(5))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(9) AND count(18))
	OR (NOT count(0) AND NOT count(5))
	OR (NOT count(1) AND NOT count(5))
	OR (NOT count(2) AND NOT count(5))
	OR (NOT count(3) AND NOT count(5)));

FDCPE_count6: FDCPE port map (count(6),count_D(6),Clock,NOT Reset,'0');
count_D(6) <= ((NOT count(4) AND NOT count(6))
	OR (NOT count(5) AND NOT count(6))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(9) AND count(18))
	OR (NOT count(0) AND NOT count(6))
	OR (NOT count(1) AND NOT count(6))
	OR (NOT count(2) AND NOT count(6))
	OR (NOT count(3) AND NOT count(6)));

FDCPE_count7: FDCPE port map (count(7),count_D(7),Clock,NOT Reset,'0');
count_D(7) <= ((count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(9) AND count(18))
	OR (NOT count(4) AND NOT count(7))
	OR (NOT count(5) AND NOT count(7))
	OR (NOT count(6) AND NOT count(7))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7))
	OR (NOT count(0) AND NOT count(7))
	OR (NOT count(1) AND NOT count(7))
	OR (NOT count(2) AND NOT count(7))
	OR (NOT count(3) AND NOT count(7)));

FTCPE_count8: FTCPE port map (count(8),count_T(8),Clock,NOT Reset,'0');
count_T(8) <= ((EXP23_.EXP)
	OR (count(0) AND NOT count(16) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND NOT count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(8) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND NOT count(11) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7))
	OR (count(15) AND count(16) AND count(17) AND count(8) AND 
	count(18))
	OR (count(0) AND NOT count(17) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7)));

FTCPE_count9: FTCPE port map (count(9),count_T(9),Clock,NOT Reset,'0');
count_T(9) <= ((count(4).EXP)
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(0) AND NOT count(17) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	NOT count(18))
	OR (togl.EXP)
	OR (count(0) AND NOT count(16) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(1) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(2) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(3) AND count(4) AND count(9) AND 
	count(18))
	OR (count(0) AND NOT count(10) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8))
	OR (count(15) AND count(16) AND count(17) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18)));

FTCPE_count10: FTCPE port map (count(10),count_T(10),Clock,NOT Reset,'0');
count_T(10) <= ((count(0) AND NOT count(16) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8) AND count(9))
	OR (count(0) AND NOT count(11) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8) AND count(9))
	OR (count(0) AND NOT count(12) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8) AND count(9))
	OR (count(0) AND NOT count(13) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8) AND count(9))
	OR (count(0) AND NOT count(14) AND NOT count(15) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8) AND count(9))
	OR (count(10) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND NOT count(17) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8) AND count(9))
	OR (count(0) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	count(9) AND NOT count(18)));

FTCPE_count11: FTCPE port map (count(11),count_T(11),Clock,NOT Reset,'0');
count_T(11) <= ((EXP13_.EXP)
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18)));

FTCPE_count12: FTCPE port map (count(12),count_T(12),Clock,NOT Reset,'0');
count_T(12) <= ((EXP11_.EXP)
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(12) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18)));

FTCPE_count13: FTCPE port map (count(13),count_T(13),Clock,NOT Reset,'0');
count_T(13) <= ((count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(1) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(2) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(3) AND count(4) AND count(9) AND 
	count(18))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	NOT count(15) AND count(1) AND count(2) AND count(3) AND count(4) AND 
	count(5) AND count(6) AND count(7) AND count(8) AND count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	NOT count(16) AND count(1) AND count(2) AND count(3) AND count(4) AND 
	count(5) AND count(6) AND count(7) AND count(8) AND count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	NOT count(17) AND count(1) AND count(2) AND count(3) AND count(4) AND 
	count(5) AND count(6) AND count(7) AND count(8) AND count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(1) AND count(2) AND count(3) AND count(4) AND count(5) AND 
	count(6) AND count(7) AND count(8) AND count(9) AND NOT count(18))
	OR (count(13) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18)));

FTCPE_count14: FTCPE port map (count(14),count_T(14),Clock,NOT Reset,'0');
count_T(14) <= ((count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(1) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(2) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(3) AND count(4) AND count(9) AND 
	count(18))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND NOT count(15) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND NOT count(16) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND NOT count(17) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(1) AND count(2) AND count(3) AND count(4) AND 
	count(5) AND count(6) AND count(7) AND count(8) AND count(9) AND 
	NOT count(18))
	OR (count(14) AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18)));

FTCPE_count15: FTCPE port map (count(15),count_T(15),Clock,NOT Reset,'0');
count_T(15) <= ((count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND NOT count(16) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8) AND count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND NOT count(17) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8) AND count(9))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(1) AND count(2) AND count(3) AND 
	count(4) AND count(5) AND count(6) AND count(7) AND count(8) AND 
	count(9) AND NOT count(18)));

FTCPE_count16: FTCPE port map (count(16),count_T(16),Clock,NOT Reset,'0');
count_T(16) <= ((count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(0) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(1) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(2) AND count(4) AND count(9) AND 
	count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(3) AND count(4) AND count(9) AND 
	count(18))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(15) AND count(1) AND count(2) AND 
	count(3) AND count(4) AND count(5) AND count(6) AND count(7) AND 
	count(8) AND count(9))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18)));

FTCPE_count17: FTCPE port map (count(17),count_T(17),Clock,NOT Reset,'0');
count_T(17) <= ((EXP26_.EXP)
	OR (count(10) AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(5) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(6) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(7) AND count(9) AND count(18))
	OR (count(11) AND count(12) AND count(13) AND count(14) AND 
	count(16) AND count(17) AND count(8) AND count(9) AND count(18))
	OR (count(15) AND count(16) AND count(17) AND count(18))
	OR (count(0) AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(15) AND count(16) AND count(1) AND 
	count(2) AND count(3) AND count(4) AND count(5) AND count(6) AND 
	count(7) AND count(8) AND count(9)));

FDCPE_count18: FDCPE port map (count(18),count_D(18),Clock,NOT Reset,'0');
count_D(18) <= ((EXP9_.EXP)
	OR (NOT count(17) AND count(18))
	OR (NOT count(11) AND NOT count(15) AND count(18))
	OR (NOT count(12) AND NOT count(15) AND count(18))
	OR (NOT count(13) AND NOT count(15) AND count(18))
	OR (NOT count(14) AND NOT count(15) AND count(18))
	OR (NOT count(16) AND count(18)));

FTCPE_led1: FTCPE port map (led1,led1_T,Clock,'0','0');
led1_T <= ((count(18).EXP)
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(5) AND count(9) AND 
	count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(6) AND count(9) AND 
	count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(7) AND count(9) AND 
	count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(8) AND count(9) AND 
	count(18))
	OR (Reset AND count(0) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(16) AND count(17) AND count(4) AND 
	count(9) AND count(18))
	OR (Reset AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (Reset AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(16) AND count(17) AND count(18)));

FDCPE_led2: FDCPE port map (led2,led2_D,Clock,'0','0');
led2_D <= led1
	 XOR 
led2_D <= ((Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(7) AND count(9) AND 
	count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(8) AND count(9) AND 
	count(18))
	OR (Reset AND count(0) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(16) AND count(17) AND count(4) AND 
	count(9) AND count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(1) AND count(4) AND 
	count(9) AND count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(2) AND count(4) AND 
	count(9) AND count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(3) AND count(4) AND 
	count(9) AND count(18))
	OR (Reset AND count(15) AND count(16) AND count(17) AND 
	count(18))
	OR (Reset AND count(10) AND count(11) AND count(12) AND 
	count(13) AND count(14) AND count(16) AND count(17) AND count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(5) AND count(9) AND 
	count(18))
	OR (Reset AND count(11) AND count(12) AND count(13) AND 
	count(14) AND count(16) AND count(17) AND count(6) AND count(9) AND 
	count(18)));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572XL-10-VQ44


   --------------------------------  
  /44 43 42 41 40 39 38 37 36 35 34 \
 | 1                             33 | 
 | 2                             32 | 
 | 3                             31 | 
 | 4                             30 | 
 | 5        XC9572XL-10-VQ44     29 | 
 | 6                             28 | 
 | 7                             27 | 
 | 8                             26 | 
 | 9                             25 | 
 | 10                            24 | 
 | 11                            23 | 
 \ 12 13 14 15 16 17 18 19 20 21 22 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 Clock                            23 KPR                           
  2 KPR                              24 TDO                           
  3 KPR                              25 GND                           
  4 GND                              26 VCC                           
  5 KPR                              27 KPR                           
  6 KPR                              28 KPR                           
  7 KPR                              29 KPR                           
  8 KPR                              30 KPR                           
  9 TDI                              31 KPR                           
 10 TMS                              32 KPR                           
 11 TCK                              33 KPR                           
 12 KPR                              34 KPR                           
 13 KPR                              35 VCC                           
 14 KPR                              36 KPR                           
 15 VCC                              37 KPR                           
 16 KPR                              38 led1                          
 17 GND                              39 led2                          
 18 Reset                            40 KPR                           
 19 KPR                              41 KPR                           
 20 KPR                              42 KPR                           
 21 KPR                              43 KPR                           
 22 KPR                              44 KPR                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572xl-10-VQ44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
</pre>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
